swagger: "2.0"
info:
  title: Clinic Management API
  description: APIs for managing users, departments, doctors, availability, and appointments
  version: "1.0.0"

basePath: /
schemes:
  - http
  - https

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: >
      JWT Authorization header using the Bearer scheme. Example: "Bearer {token}"

paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: Register a new user
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required: [name, email, password]
            properties:
              name:
                type: string
              email:
                type: string
              password:
                type: string
      responses:
        201:
          description: User created successfully
        400:
          description: Email already registered

  /auth/login:
    post:
      tags:
        - auth
      summary: Login and get JWT token
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required: [email, password]
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: Login successful
        401:
          description: Invalid credentials

  /admin/departments:
    post:
      tags:
        - admin
      summary: Create a new department
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required: [name]
            properties:
              name:
                type: string
      responses:
        201:
          description: Department created successfully
        400:
          description: Department already exists
    get:
      tags:
        - admin
      summary: List all departments
      security:
        - Bearer: []
      responses:
        200:
          description: List of departments

  /admin/doctors:
    post:
      tags:
        - admin
      summary: Onboard a new doctor
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required: [name, email, password]
            properties:
              name:
                type: string
              email:
                type: string
              password:
                type: string
      responses:
        201:
          description: doctor created successfully
        400:
          description: Email already exists

  /admin/doctors/assign:
    post:
      tags:
        - admin
      summary: Assign a doctor to a department
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required: [doctor_id, department_id]
            properties:
              doctor_id:
                type: integer
              department_id:
                type: integer
      responses:
        201:
          description: doctor assigned successfully
        400:
          description: doctor already assigned

  /availability:
    post:
      tags:
        - doctor
      summary: Create availability for a doctor
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required: [start_time, end_time]
            properties:
              start_time:
                type: string
                format: date-time
              end_time:
                type: string
                format: date-time
      responses:
        201:
          description: Availability created successfully
        400:
          description: Invalid data or overlapping availability
    get:
      tags:
        - doctor
      summary: List availability for the logged-in doctor
      security:
        - Bearer: []
      responses:
        200:
          description: List of availability slots
        400:
          description: Error fetching availabilities

  /appointments:
    post:
      tags:
        - appointment
      summary: Book an appointment with a doctor
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required: [doctor_id, appointment_time]
            properties:
              doctor_id:
                type: integer
              appointment_time:
                type: string
                format: date-time
      responses:
        201:
          description: appointment booked successfully
        400:
          description: Invalid data or slot unavailable
    get:
      tags:
        - appointment
      summary: List appointments for the logged-in user
      description:
        - Members see their own booked appointments
        - Doctors see appointments assigned to them
        - Admins see all appointments
      security:
        - Bearer: []
      responses:
        200:
          description: List of appointments
        400:
          description: Error fetching appointments
